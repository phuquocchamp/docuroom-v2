version: '3.7'
services:
  database:
    container_name: "database"
    image: mysql:8.0
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  backend:
    container_name: "backend"
    build: ../backend
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    environment:
      - spring.datasource.url=jdbc:mysql://database:3306/docuroom_db?useSSL=false&allowPublicKeyRetrieval=true
      - spring.datasource.username=${MYSQL_DATABASE_USERNAME}
      - spring.datasource.password=${MYSQL_DATABASE_PASSWORD}

      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}

      - spring.elasticsearch.uris=http://elasticsearch:9200
    networks:
      - app-network

  frontend:
    container_name: "frontend"
    build: ../frontend
    ports:
      - "3000:3000"
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  mysql_data:
  esdata:
    driver: local

networks:
  app-network:
    driver: bridge